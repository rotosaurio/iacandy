"""
Script para recrear ChromaDB con la funci√≥n de distancia coseno correcta.
IMPORTANTE: Este script ELIMINA la colecci√≥n existente y la recrea.
"""

import sys
import io
import shutil
import os

# Fix Windows encoding
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')

import chromadb
from schema_manager import schema_manager

print("=" * 80)
print("üîß CORRECCI√ìN DE CHROMADB: Cambio a Distancia Coseno")
print("=" * 80)

print("\n‚ö†Ô∏è  ADVERTENCIA: Este script eliminar√° la colecci√≥n actual y la recrear√°.")
print("    La colecci√≥n se regenerar√° autom√°ticamente con los embeddings correctos.")

input("\nPresiona ENTER para continuar o Ctrl+C para cancelar...")

print("\nüóëÔ∏è  Paso 1: Eliminando colecci√≥n existente...")

try:
    # Conectar a ChromaDB
    client = chromadb.PersistentClient(path="./data/chroma_db")

    # Intentar eliminar la colecci√≥n existente
    try:
        client.delete_collection(name="schema_embeddings")
        print("‚úì Colecci√≥n 'schema_embeddings' eliminada")
    except Exception as e:
        print(f"‚ö†Ô∏è  No se pudo eliminar la colecci√≥n (puede que no existiera): {e}")

    print("\n‚ú® Paso 2: Creando nueva colecci√≥n con distancia coseno...")

    # Crear nueva colecci√≥n CON distancia coseno
    collection = client.create_collection(
        name="schema_embeddings",
        metadata={"hnsw:space": "cosine"}  # ¬°CLAVE! Usar distancia coseno
    )
    print("‚úì Nueva colecci√≥n creada con metadata:")
    print(f"  - Funci√≥n de distancia: cosine")
    print(f"  - Metadata: {collection.metadata}")

    print("\nüìä Paso 3: Regenerando embeddings...")
    print("‚è≥ Esto tomar√° aproximadamente 60-90 segundos...")

    # Forzar recarga completa del esquema para regenerar embeddings
    schema_manager.load_and_process_schema(force_refresh=True, skip_embeddings=False)

    print("\n‚úÖ ChromaDB recreado exitosamente con distancia coseno")
    print("\nüîç Verificaci√≥n: Probando b√∫squeda...")

    # Probar una b√∫squeda r√°pida
    test_query = "art√≠culos m√°s vendidos"
    query_embedding = schema_manager.embedding_generator.generate_embedding(test_query)
    results = collection.query(
        query_embeddings=[query_embedding],
        n_results=5
    )

    if results['ids'] and results['ids'][0]:
        print(f"\nüìã Top 5 resultados para '{test_query}':")
        for i in range(min(5, len(results['ids'][0]))):
            table_name = results['ids'][0][i]
            distance = results['distances'][0][i]
            similarity = 1 - distance

            print(f"  {i+1}. {table_name}")
            print(f"     Similitud: {similarity:.4f}")

            if similarity > 0:
                print(f"     ‚úÖ Similitud POSITIVA (correcto)")
            else:
                print(f"     ‚ùå Similitud NEGATIVA (error persistente)")

    print("\n" + "=" * 80)
    print("‚úÖ ¬°PROCESO COMPLETADO!")
    print("=" * 80)
    print("\nAhora puedes:")
    print("  1. Reiniciar el servidor web (app.py)")
    print("  2. Probar la consulta: 'art√≠culos m√°s vendidos de febrero 2025'")
    print("=" * 80)

except Exception as e:
    print(f"\n‚ùå ERROR: {e}")
    import traceback
    traceback.print_exc()
    sys.exit(1)
